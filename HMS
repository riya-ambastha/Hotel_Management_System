Features:
Room Booking.
Customer Check-in.
Customer Check-out.
Room Availability Check.
Customer Records.
Payment Management.

code for hotel management system:-

#include <iostream>
#include <string>
#include <iomanip>
using namespace std;

// Class to store customer details
class Customer {
public:
    string name;
    string address;
    string phone;
    int roomNumber;
    int numOfDays;

    Customer() : roomNumber(0), numOfDays(0) {}

    void getDetails() {
        cout << "Enter customer name: ";
        cin.ignore();
        getline(cin, name);
        cout << "Enter customer address: ";
        getline(cin, address);
        cout << "Enter customer phone number: ";
        getline(cin, phone);
        cout << "Enter number of days for stay: ";
        cin >> numOfDays;
    }

    void showDetails() {
        cout << left << setw(20) << name << setw(20) << address << setw(15) << phone << setw(10) << roomNumber << numOfDays << " day(s)" << endl;
    }
};

// Class for managing hotel
class Hotel {
private:
    int totalRooms;
    bool isBooked[100];
    Customer customers[100];

public:
    Hotel(int total) {
        totalRooms = total;
        for (int i = 0; i < totalRooms; i++) {
            isBooked[i] = false;
        }
    }

    // Book a room for a customer
    void bookRoom() {
        int roomNumber;
        cout << "Enter room number to book (1 to " << totalRooms << "): ";
        cin >> roomNumber;

        if (roomNumber < 1 || roomNumber > totalRooms) {
            cout << "Invalid room number!" << endl;
            return;
        }

        if (isBooked[roomNumber - 1]) {
            cout << "Room already booked!" << endl;
        } else {
            customers[roomNumber - 1].getDetails();
            customers[roomNumber - 1].roomNumber = roomNumber;
            isBooked[roomNumber - 1] = true;
            cout << "Room " << roomNumber << " successfully booked for " << customers[roomNumber - 1].name << "." << endl;
        }
    }

    // Check room availability
    void checkRoomAvailability() {
        for (int i = 0; i < totalRooms; i++) {
            cout << "Room " << (i + 1) << ": ";
            if (isBooked[i]) {
                cout << "Booked by " << customers[i].name << endl;
            } else {
                cout << "Available" << endl;
            }
        }
    }

    // Customer checkout and payment
    void checkout() {
        int roomNumber;
        cout << "Enter room number to checkout (1 to " << totalRooms << "): ";
        cin >> roomNumber;

        if (roomNumber < 1 || roomNumber > totalRooms || !isBooked[roomNumber - 1]) {
            cout << "Invalid room number or the room is not booked!" << endl;
            return;
        }

        int ratePerDay = 1000;  // Assume rate per day is 1000
        int totalAmount = customers[roomNumber - 1].numOfDays * ratePerDay;
        cout << "Checkout details for room " << roomNumber << ":\n";
        customers[roomNumber - 1].showDetails();
        cout << "Total amount to be paid: Rs. " << totalAmount << endl;

        // Free the room
        isBooked[roomNumber - 1] = false;
        cout << "Checkout completed, room " << roomNumber << " is now available." << endl;
    }

    // Show all customer records
    void showCustomerRecords() {
        cout << left << setw(20) << "Customer Name" << setw(20) << "Address" << setw(15) << "Phone" << setw(10) << "Room" << "Stay Duration" << endl;
        for (int i = 0; i < totalRooms; i++) {
            if (isBooked[i]) {
                customers[i].showDetails();
            }
        }
    }
};

// Main menu
int main() {
    int totalRooms;
    cout << "Enter total number of rooms in the hotel: ";
    cin >> totalRooms;

    Hotel hotel(totalRooms);

    int choice;
    do {
        cout << "\nHotel Management System\n";
        cout << "1. Book a room\n";
        cout << "2. Check room availability\n";
        cout << "3. Customer checkout\n";
        cout << "4. Show customer records\n";
        cout << "5. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
        case 1:
            hotel.bookRoom();
            break;
        case 2:
            hotel.checkRoomAvailability();
            break;
        case 3:
            hotel.checkout();
            break;
        case 4:
            hotel.showCustomerRecords();
            break;
        case 5:
            cout << "Exiting system..." << endl;
            break;
        default:
            cout << "Invalid choice, please try again!" << endl;
        }
    } while (choice != 5);

    return 0;
}
 Explanation:
Customer Class:

Stores details of customers such as name, address, phone number, room number, and the number of days of stay.
getDetails() to input customer information.
showDetails() to display customer details.
Hotel Class:

Manages rooms, bookings, and customer records.
bookRoom(): Allows the user to book a room and store customer details.
checkRoomAvailability(): Displays the availability of all rooms.
checkout(): Manages customer checkout, including payment processing (assuming a fixed rate per day).
showCustomerRecords(): Shows all current customer details.
Main Function:

Provides a menu-driven interface for the system, allowing the user to perform operations like booking, checking availability, checking out, and viewing customer records.
Possible Enhancements:
Advanced Billing: Include tax, discounts, or extra charges.
Room Services: Add an option to manage food orders or room cleaning services.
Dynamic Room Pricing: Implement varying room prices based on room type (deluxe, standard, etc.).
This project structure is great for both academic submissions and a learning exercise on using object-oriented concepts in C++. You can customize it further depending on the requirements. Let me know if you want any additions or adjustments!







